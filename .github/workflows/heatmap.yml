name: Build Heatmap (Prompt each run)

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: "owner/name of the repo to visualize"
        required: true
        type: string
      author_email:
        description: "Filter commits by author email (optional)"
        required: false
        type: string
      ignore_merges:
        description: "Set to 1 to exclude merge commits (default 1)"
        required: false
        type: string
        default: "1"
      lookback_days:
        description: "Days of history (default 365)"
        required: false
        type: string
        default: "365"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo (heatmap host)
        uses: actions/checkout@v4

      - name: Make a file-safe name from input
        id: names
        shell: bash
        run: |
          SAFE=$(echo "${{ inputs.target_repo }}" | sed 's#/#-#g')
          echo "SAFE_NAME=$SAFE" >> $GITHUB_ENV

      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          path: target-repo
          # Use your PAT if present; otherwise GITHUB_TOKEN (works for public repos)
          token: ${{ secrets.TARGET_REPO_TOKEN || github.token }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate SVG heatmap
        env:
          REPO_DIR: target-repo
          AUTHOR_EMAIL: ${{ inputs.author_email }}
          IGNORE_MERGES: ${{ inputs.ignore_merges || '1' }}
          LOOKBACK_DAYS: ${{ inputs.lookback_days || '365' }}
          # One file per run, named after the chosen repo:
          OUTPUT_SVG: public/heatmap-${{ env.SAFE_NAME }}.svg
        run: |
          python scripts/fetch_commits_and_render.py
          echo "Wrote public/heatmap-${{ env.SAFE_NAME }}.svg"

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
