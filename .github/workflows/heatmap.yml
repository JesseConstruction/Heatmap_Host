name: Build Heatmap (Prompt each run)

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: "owner/name of the repo to visualize"
        required: true
        type: string
      author_email:
        description: "Filter commits by author email (optional)"
        required: false
        type: string
      ignore_merges:
        description: "Set to 1 to exclude merge commits (default 1)"
        required: false
        type: string
        default: "1"
      lookback_days:
        description: "Days of history (default 365)"
        required: false
        type: string
        default: "365"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo (heatmap host)
        uses: actions/checkout@v4

      - name: Make a file-safe name from input
        id: names
        shell: bash
        run: |
          SAFE=$(echo "${{ inputs.target_repo }}" | sed 's#/#-#g')
          echo "SAFE_NAME=$SAFE" >> $GITHUB_ENV

      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target_repo }}
          path: target-repo
          # Use your PAT if present; otherwise GITHUB_TOKEN (works for public repos)
          token: ${{ secrets.TARGET_REPO_TOKEN || github.token }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate SVG heatmap
        env:
          REPO_DIR: target-repo
          AUTHOR_EMAIL: ${{ inputs.author_email }}
          IGNORE_MERGES: ${{ inputs.ignore_merges || '1' }}
          LOOKBACK_DAYS: ${{ inputs.lookback_days || '365' }}
          # One file per run, named after the chosen repo:
          OUTPUT_SVG: public/heatmap-${{ env.SAFE_NAME }}.svg
        run: |
          python scripts/fetch_commits_and_render.py
          echo "Wrote public/heatmap-${{ env.SAFE_NAME }}.svg"

      - name: Build gallery index.html
        shell: bash
        run: |
          set -euo pipefail
          BASE="https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY#*/}"
          mkdir -p public
          {
            echo '<!doctype html><html lang="en"><head><meta charset="utf-8">'
            echo '<meta name="viewport" content="width=device-width, initial-scale=1">'
            echo '<title>Heatmaps</title>'
            echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;margin:24px}'
            echo '.grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(360px,1fr));gap:24px}'
            echo '.card{border:1px solid #e5e7eb;border-radius:12px;padding:16px;box-shadow:0 1px 2px rgba(0,0,0,.05)}'
            echo '.title{font-size:14px;color:#444;margin:0 0 8px 0;word-break:break-all}'
            echo '.link{font-size:12px;color:#2563eb;text-decoration:none}'
            echo '</style></head><body>'
            echo '<h1>Repo Heatmaps</h1>'
            echo '<div class="grid">'
            for f in public/*.svg; do
              [ -e "$f" ] || continue
              name=$(basename "$f")
              # derive repo label from filename pattern heatmap-<owner>-<repo>.svg if present
              label="${name#heatmap-}"; label="${label%.svg}"
              echo '<div class="card">'
              echo "  <p class=\"title\">$label</p>"
              echo "  <a class=\"link\" href=\"$BASE/$name\">$BASE/$name</a>"
              echo "  <div style=\"margin-top:8px\"><img src=\"$name\" alt=\"$label\" style=\"max-width:100%;height:auto\" /></div>"
              echo '</div>'
            done
            echo '</div>'
            echo '</body></html>'
          } > public/index.html

      - name: Show published URLs
        shell: bash
        run: |
          BASE="https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY#*/}"
          echo "## Published URLs" >> "$GITHUB_STEP_SUMMARY"
          echo "- Home: ${BASE}/" >> "$GITHUB_STEP_SUMMARY"
          for f in public/*.svg; do
            echo "- ${BASE}/$(basename "$f")" >> "$GITHUB_STEP_SUMMARY"
          done


      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
